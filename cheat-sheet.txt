-----------------------------------------------------------------------
------------------------Setting up-------------------------------------
-----------------------------------------------------------------------
1. dl node.js from https://nodejs.org/en (Current button)

] npm install -g @angular/cli@latest

2. create an angular project
] ng new my-awesome-app --no-strict --skip-tests

3. Once inside your project folder, install bootstrap locally inside your angular project folder..
] npm install --save bootstrap@3
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------

https://angular.io/guide/lifecycle-hooks

-----------------------------------------------------------------------
----------------------closing the dropdown from anywhere---------------
-----------------------------------------------------------------------
If you want that a dropdown can also be closed by a click anywhere outside (which also means that a click on one dropdown closes any other one, btw.), replace the code of dropdown.directive.ts by this one (placing the listener not on the dropdown, but on the document):

import {Directive, ElementRef, HostBinding, HostListener} from '@angular/core';
 
@Directive({
  selector: '[appDropdown]'
})
export class DropdownDirective {
  @HostBinding('class.open') isOpen = false;
  @HostListener('document:click', ['$event']) toggleOpen(event: Event) {
    this.isOpen = this.elRef.nativeElement.contains(event.target) ? !this.isOpen : false;
  }
  constructor(private elRef: ElementRef) {}
}
-----------------------------------------------------------------------
-------------Alternative Injection Syntax------------------------------
-----------------------------------------------------------------------
Instead of injecting LoggingService like this:

@Component(...)
export class AccountComponent {
  // @Input() & @Output() code as shown in the previous lecture
 
  constructor(private loggingService: LoggingService) {}
}
you could inject it like this, by using the inject() function:

import { Component, Input, Output, inject } from '@angular/core'; // <- Add inject import
 
@Component(...)
export class AccountComponent {
  // @Input() & @Output() code as shown in the previous lecture
  private loggingService?: LoggingService; // <- must be added
 
  constructor() {
    this.loggingService = inject(LoggingService);
  }
}
It's totally up to you, which approach you prefer. In this course (and, as mentioned, in most projects), we'll use the constructor approach.
-----------------------------------------------------------------------
-----------------------------------------------------------------------
-----------------------------------------------------------------------